generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum QuizType {
  PERFIL
  SIMULACAO
  TESTE
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String    @unique
  phone        String?
  city         String?
  nearestUnit  String?
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  visitante     Visitante?
  intercambista Intercambista?
  admin         Admin?
  quizResults   QuizResult[]
}

model Visitante {
  userId            Int   @id
  quizProfileResult Json?
  simulationResult  Json?

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Intercambista {
  userId                Int   @id
  emergencyContactName  String?
  emergencyContactPhone String?
  contractId            Int?

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Admin {
  userId       Int   @id
  internalRole String

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Program {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  durationWeeks Int?
  country       String?
  price         Decimal   @db.Decimal(14,2)
  requirements  String?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Quiz {
  id        Int       @id @default(autoincrement())
  title     String
  type      QuizType?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  questions QuizQuestion[]
  results   QuizResult[]
}

model QuizQuestion {
  id            Int      @id @default(autoincrement())
  quizId        Int
  question      String
  options       Json?
  correctOption String?

  quiz Quiz @relation(fields: [quizId], references: [id])

  @@index([quizId])
}

model QuizResult {
  id         Int      @id @default(autoincrement())
  userId     Int
  quizId     Int
  score      Int?
  resultData Json?
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  quiz Quiz @relation(fields: [quizId], references: [id])

  @@index([userId])
  @@index([quizId])
}
